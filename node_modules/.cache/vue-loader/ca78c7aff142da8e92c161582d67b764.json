{"remainingRequest":"/home/makashima/Documents/code/Halisi/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/makashima/Documents/code/Halisi/src/views/landingpage.vue?vue&type=template&id=298c15fc&","dependencies":[{"path":"/home/makashima/Documents/code/Halisi/src/views/landingpage.vue","mtime":1586298882467},{"path":"/home/makashima/Documents/code/Halisi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/Halisi/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/Halisi/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/makashima/Documents/code/Halisi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/makashima/Documents/code/Halisi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}